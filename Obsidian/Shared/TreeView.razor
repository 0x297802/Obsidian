@using MudBlazor.Utilities;
@typeparam TItem
@inherits ComponentBase

<style>
    .tree-view-item-wrapper {
        width: 100%;
        padding-left: 2rem;
    }

        .tree-view-item-wrapper:hover:not(.tree-view-item-wrapper-selected) {
            background-color: #0000000a;
        }

    .tree-view-item-wrapper-selected {
        background-color: rgba(0,0,0,0.15);
    }

    .tree-view-item {
        width: 100%;
        table-layout: fixed;
    }

    .tree-view-item-name {
        user-select: none;
        white-space: nowrap;
        width: 100%;
        vertical-align: middle;
        overflow-x: clip;
    }
</style>

<div style="@_style">
    <Virtualize Items="@ItemsFlat" OverscanCount="10" ItemContent="@ItemTemplate" ItemSize="@ItemSize" />
</div>

@code {
    private string _style =>
        new StyleBuilder()
            .AddStyle("height", this.Height, !string.IsNullOrEmpty(this.Height))
            .AddStyle("max-height", this.MaxHeight, !string.IsNullOrEmpty(this.Height))
            .AddStyle("overflow-y", "scroll")
            .AddStyle(this.Style)
            .Build();

    [Parameter]
    public ICollection<TItem> ItemsFlat { get; set; }

    [Parameter]
    public RenderFragment<TItem> ItemTemplate { get; set; }

    [Parameter]
    public float ItemSize { get; set; } = 50f;

    [Parameter]
    public string Height { get; set; }

    [Parameter]
    public string MaxHeight { get; set; }

    [Parameter]
    public string Style { get; set; }

    [Parameter]
    public EventCallback<TItem> OnSelectedItemChanged { get; set; }
}
